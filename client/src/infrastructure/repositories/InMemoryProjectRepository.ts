import { ProjectEntity } from '../../domain/entities/Project';
import { ProjectRepository } from '../../domain/repositories/ProjectRepository';

export class InMemoryProjectRepository implements ProjectRepository {
    private projects: ProjectEntity[] = [
        {
            id: '1',
            title: 'Nexus Enterprise',
            subtitle: 'Corporate Authentication System',
            description: 'Sistema corporativo completo de autentica√ß√£o e gest√£o empresarial com dashboard analytics avan√ßado.',
            longDescription: 'Nexus Enterprise √© uma solu√ß√£o completa para autentica√ß√£o corporativa, desenvolvida com Java e React. O sistema oferece autentica√ß√£o JWT, controle de acesso baseado em roles (RBAC), dashboard com analytics em tempo real, gest√£o completa de usu√°rios e sistema de relat√≥rios profissionais. Constru√≠do seguindo padr√µes enterprise com arquitetura escal√°vel.',
            technologies: [
                'Java 21',
                'Spring Boot',
                'React 18',
                'TypeScript',
                'JWT Authentication',
                'Maven',
                'GSAP Animations',
                'TailwindCSS',
                'REST API'
            ],
            features: [
                'Sistema de autentica√ß√£o JWT seguro',
                'Dashboard analytics em tempo real',
                'Gest√£o completa de usu√°rios (CRUD)',
                'Sistema de relat√≥rios profissionais',
                'Controle de acesso baseado em roles',
                'Interface moderna com anima√ß√µes GSAP',
                'API RESTful documentada',
                'Arquitetura enterprise escal√°vel'
            ],
            githubUrl: 'https://github.com/teusdrz/java-login-system',
            images: {
                hero: '/assets/projects/nexus-hero.png',
                screenshots: [
                    '/assets/projects/nexus-dashboard.png',
                    '/assets/projects/nexus-users.png',
                    '/assets/projects/nexus-reports.png'
                ]
            },
            category: 'enterprise',
            status: 'completed',
            impact: {
                metric: 'Enterprise Users',
                value: '50+',
                description: 'Usu√°rios corporativos gerenciados com perfis completos'
            },
            highlights: [
                {
                    icon: 'üîê',
                    title: 'Seguran√ßa Enterprise',
                    description: 'JWT + RBAC com pol√≠ticas de seguran√ßa avan√ßadas'
                },
                {
                    icon: 'üìä',
                    title: 'Analytics Avan√ßado',
                    description: 'Dashboard com m√©tricas em tempo real e visualiza√ß√µes'
                },
                {
                    icon: 'üé®',
                    title: 'UI Profissional',
                    description: 'Interface moderna com anima√ß√µes GSAP e design responsivo'
                }
            ],
            timeline: [
                {
                    phase: 'Architecture',
                    duration: '1 week',
                    description: 'Enterprise architecture definition and technology stack'
                },
                {
                    phase: 'Backend Development',
                    duration: '3 weeks',
                    description: 'REST API development with Java/Spring Boot'
                },
                {
                    phase: 'Frontend Development',
                    duration: '2 weeks',
                    description: 'React interface with TypeScript and GSAP animations'
                },
                {
                    phase: 'Testing & Deploy',
                    duration: '1 week',
                    description: 'Complete testing, documentation and deployment'
                }
            ]
        },
        {
            id: '2',
            title: 'Layla AI',
            subtitle: 'Intelligent Virtual Assistant',
            description: 'AI-powered virtual assistant for task automation and intelligent customer service.',
            longDescription: 'Layla AI is an intelligent virtual assistant developed to automate complex tasks and provide personalized service. Using advanced natural language processing and machine learning technologies, Layla offers humanized interactions and precise contextual responses.',
            technologies: [
                'Python',
                'Natural Language Processing',
                'Machine Learning',
                'TensorFlow',
                'FastAPI',
                'React',
                'WebSocket',
                'OpenAI API',
                'Speech Recognition'
            ],
            features: [
                'Processamento de linguagem natural avan√ßado',
                'Reconhecimento de voz e s√≠ntese de fala',
                'Aprendizado cont√≠nuo de prefer√™ncias',
                'Integra√ß√£o com m√∫ltiplas APIs',
                'Interface conversacional intuitiva',
                'Automa√ß√£o de tarefas personalizadas',
                'An√°lise de sentimentos em tempo real',
                'Suporte multi-idioma'
            ],
            githubUrl: 'https://github.com/teusdrz/Layla-IA',
            images: {
                hero: '/assets/projects/layla-hero.png',
                screenshots: [
                    '/assets/projects/layla-chat.png',
                    '/assets/projects/layla-analytics.png',
                    '/assets/projects/layla-settings.png'
                ]
            },
            category: 'ai',
            status: 'in-progress',
            impact: {
                metric: 'Response Accuracy',
                value: '94%',
                description: 'Precis√£o nas respostas e entendimento contextual'
            },
            highlights: [
                {
                    icon: 'ü§ñ',
                    title: 'Advanced AI',
                    description: 'Machine Learning with natural language processing'
                },
                {
                    icon: 'üéôÔ∏è',
                    title: 'Voice Interface',
                    description: 'Voice recognition and natural speech synthesis'
                },
                {
                    icon: 'üß†',
                    title: 'Continuous Learning',
                    description: 'System that evolves with user interactions'
                }
            ],
            timeline: [
                {
                    phase: 'Research & Planning',
                    duration: '2 weeks',
                    description: 'AI technology research and architecture definition'
                },
                {
                    phase: 'Core AI Development',
                    duration: '4 weeks',
                    description: 'AI core development and NLP'
                },
                {
                    phase: 'Interface & Integration',
                    duration: '3 weeks',
                    description: 'User interface and API integration'
                },
                {
                    phase: 'Training & Optimization',
                    duration: '2 weeks',
                    description: 'Model training and performance optimizations'
                }
            ]
        },
        {
            id: '3',
            title: 'Pet Triage Pro',
            subtitle: 'Sistema Veterin√°rio de Emerg√™ncia',
            description: 'Sistema inteligente de triagem para cl√≠nicas veterin√°rias com classifica√ß√£o autom√°tica de urg√™ncia.',
            longDescription: 'Pet Triage Pro √© um sistema especializado para cl√≠nicas veterin√°rias que automatiza o processo de triagem de emerg√™ncia. Utilizando algoritmos inteligentes, o sistema classifica automaticamente a urg√™ncia dos casos baseado em sintomas, hist√≥rico e condi√ß√µes do animal, otimizando o atendimento e salvando vidas.',
            technologies: [
                'React 18',
                'TypeScript',
                'Vite',
                'Tailwind CSS',
                'Node.js',
                'Express',
                'MongoDB',
                'Chart.js',
                'WebSocket'
            ],
            features: [
                'Classifica√ß√£o autom√°tica de urg√™ncia',
                'Protocolo de triagem veterin√°ria',
                'Dashboard de monitoramento em tempo real',
                'Hist√≥rico completo de atendimentos',
                'Sistema de notifica√ß√µes urgentes',
                'Relat√≥rios de performance da cl√≠nica',
                'Interface otimizada para tablets',
                'Integra√ß√£o com sistemas existentes'
            ],
            githubUrl: 'https://github.com/teusdrz/pet-triage-pro',
            images: {
                hero: '/assets/projects/pettriage-hero.png',
                screenshots: [
                    '/assets/projects/pettriage-dashboard.png',
                    '/assets/projects/pettriage-triage.png',
                    '/assets/projects/pettriage-reports.png'
                ]
            },
            category: 'healthcare',
            status: 'completed',
            impact: {
                metric: 'Response Time',
                value: '60%',
                description: 'Redu√ß√£o no tempo de resposta para emerg√™ncias'
            },
            highlights: [
                {
                    icon: 'üè•',
                    title: 'Triagem Inteligente',
                    description: 'Algoritmo de classifica√ß√£o baseado em protocolos veterin√°rios'
                },
                {
                    icon: '‚ö°',
                    title: 'Tempo Real',
                    description: 'Monitoramento e notifica√ß√µes instant√¢neas'
                },
                {
                    icon: 'üì±',
                    title: 'Mobile First',
                    description: 'Interface otimizada para dispositivos m√≥veis e tablets'
                }
            ],
            timeline: [
                {
                    phase: 'Veterinary Research',
                    duration: '1 week',
                    description: 'Study of veterinary protocols and clinic needs'
                },
                {
                    phase: 'Algorithm Development',
                    duration: '2 weeks',
                    description: 'Development of triage classification algorithm'
                },
                {
                    phase: 'Interface & UX',
                    duration: '3 weeks',
                    description: 'Design and development of mobile-first interface'
                },
                {
                    phase: 'Testing & Validation',
                    duration: '1 week',
                    description: 'Testing with veterinarians and protocol validation'
                }
            ]
        }
    ];

    async getAllProjects(): Promise<ProjectEntity[]> {
        return this.projects;
    }

    async getProjectById(id: string): Promise<ProjectEntity | null> {
        return this.projects.find(project => project.id === id) || null;
    }

    async getFeaturedProjects(): Promise<ProjectEntity[]> {
        return this.projects.filter(project => project.status === 'completed');
    }
}
